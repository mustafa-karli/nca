SET DATABASE SQL SYNTAX PGS TRUE;

CREATE TABLE USER_ACCOUNT (
  USERNAME             VARCHAR(30) NOT NULL,
  STATUS               CHAR(1)     NOT NULL,
  FIRST_NAME           VARCHAR(40) NOT NULL,
  LAST_NAME            VARCHAR(40) NOT NULL,
  EMAIL_ADDRESS        VARCHAR(80),
  PASSTEXT             VARCHAR(128),
  PASSDATE             TIMESTAMP,
  LASTLOGON            TIMESTAMP,
    CONSTRAINT USER_ACCOUNT_PK PRIMARY KEY (USERNAME)
);


INSERT INTO USER_ACCOUNT (USERNAME,STATUS,FIRST_NAME, LAST_NAME) VALUES ('EVERYONE','S','EVERYONE','EVERYONE');



CREATE TABLE USER_FAVORITE (
  USERNAME             VARCHAR(30)    NOT NULL,
  FAVORITE_TYPE        CHAR(2)        NOT NULL,
  OBJECT_ID            VARCHAR(30)    NOT NULL,
  DESCRIPTION          VARCHAR(80),
    CONSTRAINT USER_FAVORITE_PK PRIMARY KEY (USERNAME,FAVORITE_TYPE,OBJECT_ID),
    CONSTRAINT USER_FAVORITES   FOREIGN KEY (USERNAME) REFERENCES USER_ACCOUNT (USERNAME) ON DELETE CASCADE ON UPDATE CASCADE
);



CREATE TABLE AUTHORITY_GROUP (
  AUTHORITY_GROUP                VARCHAR(30) NOT NULL,
  CAPTION                        VARCHAR(30) NOT NULL,
    CONSTRAINT AUTHORITY_GROUP_PK PRIMARY KEY (AUTHORITY_GROUP)
);



CREATE TABLE MAIN_MENU (
   MENU                          VARCHAR(30)  NOT NULL,
   CAPTION                       VARCHAR(30)  NOT NULL,
   ICON                          VARCHAR(30)  NOT NULL,
   DISPLAY_ORDER                 SMALLINT     NOT NULL,
     CONSTRAINT MAIN_MENU_PK PRIMARY KEY (MENU)
);



CREATE TABLE SCREEN_PAGE (
   PAGENAME                      VARCHAR(30)  NOT NULL,
   CAPTION                       VARCHAR(30)  NOT NULL,
   ICON                          VARCHAR(30)  NOT NULL,
   URL                           VARCHAR(100) NOT NULL,
   MENU                          VARCHAR(30)  NOT NULL,
   DISPLAY_ORDER                 SMALLINT     NOT NULL,
     CONSTRAINT SCREEN_PAGE_PK PRIMARY KEY (PAGENAME),
     CONSTRAINT SCREEN_PAGES   FOREIGN KEY (MENU) REFERENCES MAIN_MENU (MENU)
);



CREATE TABLE USER_AUTHORIZATION (
   USERNAME                      VARCHAR(30)  NOT NULL,
   AUTHORITY_GROUP               VARCHAR(30)  NOT NULL,
   BEGDA                         TIMESTAMP    NOT NULL,
   ENDDA                         TIMESTAMP,
     CONSTRAINT USER_AUTHORIZATION_PK          PRIMARY KEY (USERNAME,AUTHORITY_GROUP),
     CONSTRAINT USER_ACCOUNT_AUTHORIZATIONS    FOREIGN KEY (USERNAME) REFERENCES USER_ACCOUNT (USERNAME) ON DELETE CASCADE ON UPDATE CASCADE,
     CONSTRAINT AUTHORITY_GROUP_AUTHORIZATIONS FOREIGN KEY (AUTHORITY_GROUP) REFERENCES AUTHORITY_GROUP (AUTHORITY_GROUP) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE INDEX USER_AUTHORIZATION_IND1 ON USER_AUTHORIZATION (AUTHORITY_GROUP);



CREATE TABLE DOMAIN_NAME (
   DOMAIN                        VARCHAR(30) NOT NULL,
   KEYSIZE                       SMALLINT    NOT NULL,
   CAPTION                       VARCHAR(80) NOT NULL,
   SORT_BY                       CHAR(1)     NOT NULL,
     CONSTRAINT DOMAIN_NAME_PK PRIMARY KEY (DOMAIN)
);



CREATE TABLE DOMAIN_VALUE(
   DOMAIN                        VARCHAR(30) NOT NULL,
   REFVALUE                      VARCHAR(30) NOT NULL,
   CAPTION                       VARCHAR(80) NOT NULL,
     CONSTRAINT DOMAIN_VALUE_PK PRIMARY KEY (DOMAIN, REFVALUE),
     CONSTRAINT DOMAIN_VALUES   FOREIGN KEY (DOMAIN) REFERENCES DOMAIN_NAME (DOMAIN) ON DELETE CASCADE ON UPDATE CASCADE
);



CREATE TABLE LANGUAGE(
   LANGCODE                      VARCHAR(2)  NOT NULL,
   CAPTION                       VARCHAR(30) NOT NULL,
   LOCALE_STR                    CHAR(5)     NOT NULL,
   DIRECTION                     VARCHAR(10) NOT NULL,
   FLAG                          VARCHAR(30) NOT NULL,
     CONSTRAINT LANGUAGE_PK PRIMARY KEY (LANGCODE)
);




CREATE TABLE CAPTION_TRANSLATION (
   CAPTION                       VARCHAR(200) NOT NULL,
   LANGCODE                      VARCHAR(2)   NOT NULL,
   LABELUPPER                    VARCHAR(200) NOT NULL,
   LABELLOWER                    VARCHAR(200) NOT NULL,
     CONSTRAINT CAPTION_TRANSLATION_PK PRIMARY KEY (CAPTION, LANGCODE),
     CONSTRAINT CAPTION_TRANSLATIONS   FOREIGN KEY (LANGCODE) REFERENCES LANGUAGE (LANGCODE) ON DELETE CASCADE ON UPDATE CASCADE
);



CREATE TABLE AUTHORITY_OBJECT (
  OBJECT_TYPE                    VARCHAR(30) NOT NULL,
    CONSTRAINT AUTHORITY_OBJECT_PK PRIMARY KEY (OBJECT_TYPE)
);



CREATE TABLE AUTHORITY_OBJECT_ACTION (
   OBJECT_TYPE                   VARCHAR(30) NOT NULL,
   ACTION                        VARCHAR(30) NOT NULL,
     CONSTRAINT AUTHORITY_OBJECT_ACTION_PK PRIMARY KEY (OBJECT_TYPE,ACTION),
     CONSTRAINT AUTHORITY_OBJECT_ACTIONS   FOREIGN KEY (OBJECT_TYPE) REFERENCES AUTHORITY_OBJECT (OBJECT_TYPE)
);



CREATE TABLE OBJECT_AUTHORIZATION (
   AUTHORITY_GROUP               VARCHAR(30)  NOT NULL,
   OBJECT_TYPE                   VARCHAR(30)  NOT NULL,
   ACTION                        VARCHAR(30)  NOT NULL,
   KEY_VALUE                     VARCHAR(100) NOT NULL,
     CONSTRAINT OBJECT_AUTHORIZATION_PK  PRIMARY KEY (AUTHORITY_GROUP,OBJECT_TYPE,ACTION,KEY_VALUE),
     CONSTRAINT OBJECT_AUTHORIZATIONS    FOREIGN KEY (AUTHORITY_GROUP)    REFERENCES AUTHORITY_GROUP (AUTHORITY_GROUP) ON DELETE CASCADE ON UPDATE CASCADE,
     CONSTRAINT OBJECT_AUTHORIZED_GROUPS FOREIGN KEY (OBJECT_TYPE,ACTION) REFERENCES AUTHORITY_OBJECT_ACTION (OBJECT_TYPE,ACTION) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE INDEX OBJECT_AUTHORIZATION_IND1 ON OBJECT_AUTHORIZATION (OBJECT_TYPE, ACTION);



CREATE TABLE COUNTRY (
   CODE                CHAR(2)      NOT NULL,
   CAPTION             VARCHAR(30)  NOT NULL,
     CONSTRAINT COUNTRY_PK PRIMARY KEY (CODE)
);



CREATE TABLE CITY (
   COUNTRY_CODE        CHAR(2)  NOT NULL,
   CITY_CODE           CHAR(2)  NOT NULL,
   CAPTION             VARCHAR(80)  NOT NULL,
     CONSTRAINT CITY_PK PRIMARY KEY (COUNTRY_CODE, CITY_CODE),
     CONSTRAINT CITIES     FOREIGN KEY (COUNTRY_CODE) REFERENCES COUNTRY (CODE) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE VIEW USER_MENU_PERMISSION AS
SELECT DISTINCT
       U.USERNAME,
       P.PAGENAME,
       P.CAPTION AS PAGE_CAPTION,
       P.ICON AS PAGE_ICON,
       P.URL,
       M.MENU,
       M.CAPTION AS MENU_CAPTION,
       M.ICON AS MENU_ICON,
       M.DISPLAY_ORDER AS MENU_ORDER,
       P.DISPLAY_ORDER AS PAGE_ORDER
  FROM OBJECT_AUTHORIZATION T, USER_AUTHORIZATION U, SCREEN_PAGE P, MAIN_MENU M
 WHERE T.AUTHORITY_GROUP=U.AUTHORITY_GROUP
   AND T.OBJECT_TYPE='PAGE'
   AND T.ACTION='ACCESS'
   AND T.KEY_VALUE=P.PAGENAME
   AND M.MENU=P.MENU;



CREATE TABLE UNIT_CONVERSION (
  SOURCE      VARCHAR(2),
  TARGET      VARCHAR(2),
  MULTIPLIER  DECIMAL(20,10),
    CONSTRAINT UNIT_CONVERSION_PK PRIMARY KEY (SOURCE,TARGET)
);



CREATE TABLE TABLE_CONTROLLER_STATIC (
  TABLENAME            VARCHAR(30)   NOT NULL,
  ROOTMAPPING          VARCHAR(80)   NOT NULL,
  MODULE               VARCHAR(80)   NOT NULL,
  CUSTOMER_SPECIFIC    CHAR(1)       NOT NULL,
  ORGANIZATION_CHECK   CHAR(1)       NOT NULL,
  CACHE_IN_HASH        CHAR(1)       NOT NULL,
  SEARCH_VIEW          VARCHAR(80),
  LIST_VIEW            VARCHAR(80),
  EDIT_VIEW            VARCHAR(80),
  SHOW_VIEW            VARCHAR(80),
  SELECT_VIEW          VARCHAR(80),
  ORDERBY              VARCHAR(80),
  SEQUENCE_NAME        VARCHAR(30),
    CONSTRAINT TABLE_CONTROLLER_STATIC_PK PRIMARY KEY (TABLENAME)
);



CREATE TABLE TABLE_FIELD_FACE (
  TABLENAME            VARCHAR(30)   NOT NULL,
  FIELDNAME            VARCHAR(30)   NOT NULL,
  EDIT_STYLE           VARCHAR(30)   NOT NULL,
  EDIT_JSTL_PATH       VARCHAR(80)   NOT NULL,
  VIEW_JSTL_PATH       VARCHAR(80)   NOT NULL,
  SEARCH_STYLE         CHAR(1)       NOT NULL,
  LOOKUP_STYLE         CHAR(1)       NOT NULL,
  TRANSLATED           CHAR(1)       NOT NULL,
  MINVALUE             VARCHAR(30),
  MAXVALUE             VARCHAR(30),
    CONSTRAINT TABLE_FIELD_FACE_PK PRIMARY KEY(TABLENAME,FIELDNAME),
    CONSTRAINT TABLE_FIELD_FACES FOREIGN KEY(TABLENAME) REFERENCES TABLE_CONTROLLER_STATIC (TABLENAME) ON DELETE CASCADE ON UPDATE CASCADE
);



CREATE TABLE TABLE_CONTENT_TYPE (
  TABLENAME            VARCHAR(30)   NOT NULL,
  OBJECT_TYPE          CHAR(2)       NOT NULL,
  CAPTION              VARCHAR(80)   NOT NULL,
  MIMETYPE             VARCHAR(200),
    CONSTRAINT TABLE_CONTENT_TYPE_PK PRIMARY KEY (TABLENAME, OBJECT_TYPE),
    CONSTRAINT TABLE_CONTENT_TYPES   FOREIGN KEY (TABLENAME) REFERENCES TABLE_CONTROLLER_STATIC (TABLENAME) ON DELETE CASCADE ON UPDATE CASCADE
);



CREATE TABLE TABLE_ACTION (
  TABLENAME            VARCHAR(30)   NOT NULL,
  ACTION               VARCHAR(30)   NOT NULL,
  CAPTION              VARCHAR(80)   NOT NULL,
  METHOD               VARCHAR(30)   NOT NULL,
  ENABLE               CHAR(1)       NOT NULL,
  AUTHORITY_CHECK      CHAR(1)       NOT NULL,
  RECORD_SPECIFIC      CHAR(1)       NOT NULL,
    CONSTRAINT TABLE_ACTION_PK PRIMARY KEY (TABLENAME, ACTION),
    CONSTRAINT TABLE_ACTIONS   FOREIGN KEY (TABLENAME) REFERENCES TABLE_CONTROLLER_STATIC (TABLENAME) ON DELETE CASCADE ON UPDATE CASCADE
);



CREATE TABLE MASTER_DETAIL_RELATION (
  CONSTRAINT_NAME      VARCHAR(30)   NOT NULL,
  MASTER_TABLE         VARCHAR(30)   NOT NULL,
  DETAIL_TABLE         VARCHAR(30)   NOT NULL,
  DETAIL_ATTRIBUTE     VARCHAR(80)   NOT NULL,
  MD_VIEW              CHAR(1)       NOT NULL,
  PAGING               VARCHAR(30),
  FILTER               VARCHAR(200),
  ORDERBY              VARCHAR(80),
    CONSTRAINT MASTER_DETAIL_RELATION_PK PRIMARY KEY (CONSTRAINT_NAME),
    CONSTRAINT MASTER_RELATION FOREIGN KEY (MASTER_TABLE) REFERENCES TABLE_CONTROLLER_STATIC (TABLENAME) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT CHILD_RELATION  FOREIGN KEY (DETAIL_TABLE) REFERENCES TABLE_CONTROLLER_STATIC (TABLENAME) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE INDEX MASTER_DETAIL_RELATION_IND1 ON MASTER_DETAIL_RELATION (MASTER_TABLE);
CREATE INDEX MASTER_DETAIL_RELATION_IND2 ON MASTER_DETAIL_RELATION (DETAIL_TABLE);



CREATE TABLE NOTIFICATION_TYPE (
  NOTIFICATION_TYPE_ID INTEGER       NOT NULL,
  OWNER_ID             INTEGER       NOT NULL,
  TABLENAME            VARCHAR(30)   NOT NULL,
  STATUS_FIELD         VARCHAR(30)   NOT NULL,
  STOP_VALUE           VARCHAR(30)   NOT NULL,
    CONSTRAINT NOTIFICATION_TYPE_PK PRIMARY KEY (NOTIFICATION_TYPE_ID)
);



CREATE TABLE USER_NOTIFICATION (
  NOTIFICATION_ID      BIGINT        NOT NULL,
  NOTIFICATION_TYPE_ID INTEGER       NOT NULL,
  USERNAME             VARCHAR(30)   NOT NULL,
  OBJECT_ID            VARCHAR(30)   NOT NULL,
  STATUS               CHAR(1)       NOT NULL,
  RAISE_DATE           TIMESTAMP     NOT NULL,
  DUE_DATE             TIMESTAMP     NOT NULL,
  DESCRIPTION VARCHAR(250),
    CONSTRAINT USER_NOTIFICATION_PK PRIMARY KEY (NOTIFICATION_ID),
    CONSTRAINT NOTIFIED_USERS       FOREIGN KEY (NOTIFICATION_TYPE_ID) REFERENCES NOTIFICATION_TYPE (NOTIFICATION_TYPE_ID),
    CONSTRAINT USER_NOTIFICATIONS   FOREIGN KEY (USERNAME)             REFERENCES USER_ACCOUNT (USERNAME) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE INDEX USER_NOTIFICATION_IND1 ON USER_NOTIFICATION (NOTIFICATION_TYPE_ID);
CREATE INDEX USER_NOTIFICATION_IND2 ON USER_NOTIFICATION (USERNAME);



CREATE TABLE NOTIFICATION_RECIPIENT (
  NOTIFICATION_TYPE_ID INTEGER       NOT NULL,
  USERNAME             VARCHAR(30)   NOT NULL,
  EVENT                VARCHAR(10)   NOT NULL,
  ENABLE               CHAR(1)       NOT NULL,
    CONSTRAINT NOTIFICATION_RECIPIENT_PK PRIMARY KEY(NOTIFICATION_TYPE_ID, USERNAME, EVENT),
    CONSTRAINT NOTIFICATION_RECIPIENTS   FOREIGN KEY(NOTIFICATION_TYPE_ID) REFERENCES NOTIFICATION_TYPE (NOTIFICATION_TYPE_ID),
    CONSTRAINT RECEIVING_NOTIFICATIONS   FOREIGN KEY(USERNAME)             REFERENCES USER_ACCOUNT (USERNAME)
);

CREATE INDEX NOTIFICATION_RECIPIENT_IND1 ON NOTIFICATION_RECIPIENT (USERNAME);



CREATE TABLE TABLE_VIEW_SCENARIO (
  SCENARIO_ID          INTEGER       NOT NULL,
  CAPTION              VARCHAR(80)   NOT NULL,
  TABLENAME            VARCHAR(30)   NOT NULL,
    CONSTRAINT TABLE_VIEW_SCENARIO_PK PRIMARY KEY (SCENARIO_ID)
);



CREATE TABLE TABLE_VIEW_SCENARIO_ITEM (
  SCENARIO_ID          INTEGER       NOT NULL,
  SEQ                  SMALLINT      NOT NULL,
  FKNAME               VARCHAR(80)   NOT NULL,
  TABLENAME            VARCHAR(30)   NOT NULL,
  CAPTION              VARCHAR(80),
  ACCESS_TYPE          CHAR(1)       NOT NULL,
  PARENT_SEQ           SMALLINT      NOT NULL,
    CONSTRAINT TABLE_VIEW_SCENARIO_ITEM_PK PRIMARY KEY(SCENARIO_ID, SEQ),
    CONSTRAINT TABLE_VIEW_SCENARIO_ITEMS   FOREIGN KEY(SCENARIO_ID) REFERENCES TABLE_VIEW_SCENARIO (SCENARIO_ID)
);



CREATE TABLE TREE_DATA (
  NODE_ID              INTEGER       NOT NULL,
  OWNER_ID             INTEGER       NOT NULL,
  CAPTION              VARCHAR(80)   NOT NULL,
  PURPOSE              VARCHAR(20)   NOT NULL,
  PARENT_ID            INTEGER,
    CONSTRAINT TREE_DATA_PK  PRIMARY KEY (NODE_ID),
    CONSTRAINT NODE_CHILDREN FOREIGN KEY (PARENT_ID) REFERENCES TREE_DATA (NODE_ID)
);

CREATE INDEX TREE_DATA_IND1 ON TREE_DATA (PARENT_ID);
CREATE INDEX TREE_DATA_IND2 ON TREE_DATA (OWNER_ID);



CREATE TABLE GEO_CITY (
  COUNTRY              CHAR(2)        NOT NULL,
  CITY                 VARCHAR(20)    NOT NULL,
  CAPTION              VARCHAR(80)    NOT NULL,
  LONGITUDE            DECIMAL(20,16),
  LATITUDE             DECIMAL(20,16),
  ALTITUDE             DECIMAL(20,16),
  POLYGON              VARCHAR(32000),
    CONSTRAINT GEO_CITY_PK  PRIMARY KEY (COUNTRY, CITY)
);


