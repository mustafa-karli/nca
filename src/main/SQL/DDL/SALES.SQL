CREATE TABLE MATERIAL_SALE_PRICE (
  MATERIAL_ID          INTEGER         NOT NULL,
  BEGDA                TIMESTAMP       NOT NULL,
  ENDDA                TIMESTAMP       NOT NULL,
  PRICE                DECIMAL(10,2)   NOT NULL,
    CONSTRAINT MATERIAL_SALE_PRICE_PK PRIMARY KEY (MATERIAL_ID, BEGDA),
    CONSTRAINT MATERIAL_SALE_PRICES   FOREIGN KEY (MATERIAL_ID) REFERENCES MATERIAL (MATERIAL_ID)
);



CREATE TABLE MATERIAL_SALE_TAX (
  MATERIAL_ID          INTEGER        NOT NULL,
  BEGDA                TIMESTAMP      NOT NULL,
  TAX_ID               VARCHAR(8)     NOT NULL,
  ENDDA                TIMESTAMP      NOT NULL,
  RATE                 DECIMAL(8,2)   NOT NULL,
    CONSTRAINT MATERIAL_SALE_TAX_PK PRIMARY KEY (MATERIAL_ID, BEGDA, TAX_ID),
    CONSTRAINT MATERIAL_SALE_TAXES  FOREIGN KEY (MATERIAL_ID) REFERENCES MATERIAL (MATERIAL_ID),
    CONSTRAINT TAX_MATERIAL_SALES   FOREIGN KEY (TAX_ID)      REFERENCES TAX_TYPE (TAX_ID)
);



CREATE TABLE SALES_ORDER (
  SALES_ORDER_ID       INTEGER       NOT NULL,
  OWNER_ID             INTEGER       NOT NULL,
  CUSTOMER_ID          INTEGER       NOT NULL,
  ORDER_DATE           TIMESTAMP     NOT NULL,
  DUE_DATE             TIMESTAMP,
  STATUS               CHAR(1)       NOT NULL,
  USERNAME             VARCHAR(30),
  DESCRIPTION          VARCHAR(250),
  DISCOUNT             DECIMAL(10,2),
  ADVANCE_PAYMENT      DECIMAL(10,2),
  ONLINE_ORDER         CHAR(1),
    CONSTRAINT SALES_ORDER_PK         PRIMARY KEY (SALES_ORDER_ID),
    CONSTRAINT CUSTOMER_SALES_ORDERS  FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (BUSINESS_PARTNER_ID)
);

CREATE INDEX SALES_ORDER_IND1 ON SALES_ORDER (OWNER_ID);



CREATE TABLE SALES_DELIVERY_ADDRESS (
  SALES_ORDER_ID       INTEGER       NOT NULL,
  ADDRESS              VARCHAR(80)   NOT NULL,
  CITY                 VARCHAR(20)   NOT NULL,
  STATE                VARCHAR(2),
  COUNTRY              VARCHAR(2),
  LONGITUDE            FLOAT,
  LATITUDE             FLOAT,
  ALTITUDE             FLOAT,
    CONSTRAINT SALES_DELIVERY_ADDRESS_PK PRIMARY KEY (SALES_ORDER_ID),
    CONSTRAINT SALES_DELIVERY_ADDRESSES  FOREIGN KEY (SALES_ORDER_ID) REFERENCES SALES_ORDER (SALES_ORDER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);



CREATE TABLE SALES_ORDER_ITEM (
  SALES_ORDER_ID       INTEGER         NOT NULL,
  LINE                 SMALLINT        NOT NULL,
  MATERIAL_ID          INTEGER         NOT NULL,
  QUANTITY             DECIMAL(10,2)   NOT NULL,
  UNIT                 VARCHAR(3)      NOT NULL,
  UNIT_PRICE           DECIMAL(10,2),
  DISCOUNT             DECIMAL(10,2),
  CURRENCY             VARCHAR(3),
  STATUS               CHAR(1),
    CONSTRAINT SALES_ORDER_ITEM_PK   PRIMARY KEY (SALES_ORDER_ID, LINE),
    CONSTRAINT SALES_ORDER_ITEMS     FOREIGN KEY (SALES_ORDER_ID) REFERENCES SALES_ORDER (SALES_ORDER_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT MATERIAL_SALES_ORDERS FOREIGN KEY (MATERIAL_ID)    REFERENCES MATERIAL (MATERIAL_ID)
);

CREATE INDEX SALES_ORDER_ITEM_IND2 ON SALES_ORDER_ITEM (MATERIAL_ID);



CREATE TABLE SALES_ORDER_ITEM_ATTR (
  SALES_ORDER_ID       INTEGER      NOT NULL,
  LINE                 SMALLINT     NOT NULL,
  MAG_ID               VARCHAR(8)   NOT NULL,
  VALUE                VARCHAR(8)   NOT NULL,
    CONSTRAINT SALES_ORDER_ITEM_ATTR_PK     PRIMARY KEY (SALES_ORDER_ID, LINE, MAG_ID),
    CONSTRAINT SALES_ORDER_ITEM_ATTRS       FOREIGN KEY (LINE, SALES_ORDER_ID)   REFERENCES SALES_ORDER_ITEM (LINE, SALES_ORDER_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT ATTRIBUTE_GROUP_SALES_ORDERS FOREIGN KEY (MAG_ID)                 REFERENCES MATERIAL_ATTRIBUTE_GROUP (MAG_ID)
);

CREATE INDEX SALES_ORDER_ITEM_ATTR_IND3 ON SALES_ORDER_ITEM_ATTR (MAG_ID);



CREATE TABLE SALES_ORDER_TAX (
  SALES_ORDER_ID       INTEGER         NOT NULL,
  LINE                 SMALLINT        NOT NULL,
  TAX_ID               VARCHAR(8)      NOT NULL,
  AMOUNT               DECIMAL(10,2)   NOT NULL,
    CONSTRAINT SALES_ORDER_TAX_PK PRIMARY KEY (SALES_ORDER_ID, LINE, TAX_ID),
    CONSTRAINT SALES_ORDER_TAXES  FOREIGN KEY (SALES_ORDER_ID, LINE) REFERENCES SALES_ORDER_ITEM (SALES_ORDER_ID, LINE) ON DELETE CASCADE ON UPDATE CASCADE
);



CREATE TABLE PRODUCT_PRICE_COMMITMENT (
  MATERIAL_ID          INTEGER         NOT NULL,
  BUSINESS_PARTNER_ID  INTEGER         NOT NULL,
  ORDER_DEAD_LINE      TIMESTAMP       NOT NULL,
  OWNER_ID             INTEGER         NOT NULL,
  DELIVERY_PROMISE     TIMESTAMP       NOT NULL,
  MIN_QUANTITY         INTEGER         NOT NULL,
  MAX_QUANTITY         INTEGER         NOT NULL,
  BOX_QUANTITY         INTEGER         NOT NULL,
  UNIT                 VARCHAR(3)      NOT NULL,
  START_PRICE          DECIMAL(12,2)   NOT NULL,
  GOAL_PRICE           DECIMAL(12,2)   NOT NULL,
  CURRENCY             CHAR(3)         NOT NULL,
  PRICING              CHAR(1)         NOT NULL,
  CURRENT_ORDER        INTEGER         NOT NULL,
  CURRENT_PRICE        DECIMAL(12,2)   NOT NULL,
  EARLY_BIRD_PCT       DECIMAL(3,2)    NOT NULL,
  STATUS               CHAR(1)         NOT NULL,
    CONSTRAINT PRODUCT_PRICE_COMMITMENT_PK PRIMARY KEY (MATERIAL_ID, BUSINESS_PARTNER_ID, ORDER_DEAD_LINE),
    CONSTRAINT VENDOR_PRICE_COMMITMENTS    FOREIGN KEY (BUSINESS_PARTNER_ID) REFERENCES VENDOR (BUSINESS_PARTNER_ID),
    CONSTRAINT MATERIAL_PRICE_COMMITMENTS  FOREIGN KEY (MATERIAL_ID)         REFERENCES MATERIAL (MATERIAL_ID)
);

CREATE INDEX PRODUCT_PRICE_COMMITMENT_IND1 ON PRODUCT_PRICE_COMMITMENT (BUSINESS_PARTNER_ID);



CREATE TABLE PRODUCT_PRICE_COMMITMENT_ITEM (
  MATERIAL_ID          INTEGER         NOT NULL,
  BUSINESS_PARTNER_ID  INTEGER         NOT NULL,
  ORDER_DEAD_LINE      TIMESTAMP       NOT NULL,
  QUANTITY             DECIMAL(10,2)   NOT NULL,
  PRICE                DECIMAL(10,2)   NOT NULL,
    CONSTRAINT PRODUCT_PRICE_COMMITMENT_ITEM_PK PRIMARY KEY (MATERIAL_ID, BUSINESS_PARTNER_ID, ORDER_DEAD_LINE, QUANTITY),
    CONSTRAINT PRODUCT_PRICE_COMMITMENT_ITEMS   FOREIGN KEY (MATERIAL_ID, BUSINESS_PARTNER_ID, ORDER_DEAD_LINE) REFERENCES PRODUCT_PRICE_COMMITMENT (MATERIAL_ID, BUSINESS_PARTNER_ID, ORDER_DEAD_LINE) ON DELETE CASCADE ON UPDATE CASCADE
);



CREATE TABLE SALES_ORDER_COMMITMENT (
  MATERIAL_ID          INTEGER         NOT NULL,
  BUSINESS_PARTNER_ID  INTEGER         NOT NULL,
  ORDER_DEAD_LINE      TIMESTAMP       NOT NULL,
  SALES_ORDER_ID       INTEGER         NOT NULL,
  LINE                 SMALLINT        NOT NULL,
  INITIAL_SEQUENCE     INTEGER         NOT NULL,
  INITIAL_PRICE        DECIMAL(12,2)   NOT NULL,
  ORDER_REFUND         DECIMAL(12,2)   NOT NULL,
  REFUND_DECISION      CHAR(1)         NOT NULL,
  REFUND_STATUS        CHAR(1)         NOT NULL,
    CONSTRAINT SALES_ORDER_COMMITMENT_PK PRIMARY KEY(MATERIAL_ID, BUSINESS_PARTNER_ID, ORDER_DEAD_LINE, SALES_ORDER_ID, LINE, INITIAL_SEQUENCE),
    CONSTRAINT COMMITMENT_SALES_ORDERS   FOREIGN KEY(MATERIAL_ID, BUSINESS_PARTNER_ID, ORDER_DEAD_LINE) REFERENCES PRODUCT_PRICE_COMMITMENT(MATERIAL_ID, BUSINESS_PARTNER_ID, ORDER_DEAD_LINE),
    CONSTRAINT SALES_ORDER_COMMITMENTS   FOREIGN KEY(SALES_ORDER_ID, LINE)                              REFERENCES SALES_ORDER_ITEM(SALES_ORDER_ID, LINE) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE INDEX SALES_ORDER_COMMITMENT_IND1 ON SALES_ORDER_COMMITMENT (SALES_ORDER_ID, LINE);



CREATE TABLE SALES_CAMPAIGN (
  SALES_CAMPAIGN_ID    INTEGER      NOT NULL,
  OWNER_ID             INTEGER      NOT NULL,
  CAPTION              VARCHAR(80)  NOT NULL,
  BEGDA                TIMESTAMP    NOT NULL,
  ENDDA                TIMESTAMP    NOT NULL,
  DISCOUNT_TYPE        CHAR(1)      NOT NULL,
  QUANTITY_THRESHOLD   SMALLINT,
  DISCOUNT_PERCENT     SMALLINT,
  DISCOUNT_QUANTITY    SMALLINT,
  SALE_THRESHOLD       DECIMAL(12,2),
  DISCOUNT_AMOUNT      DECIMAL(12,2),
    CONSTRAINT SALES_CAMPAIGN_PK PRIMARY KEY (SALES_CAMPAIGN_ID)
);



CREATE TABLE SALES_CAMPAIGN_ITEM (
  SALES_CAMPAIGN_ID    INTEGER       NOT NULL,
  MATERIAL_ID          INTEGER       NOT NULL,
  PRICE                DECIMAL(12,2) NOT NULL,
    CONSTRAINT SALES_CAMPAIGN_ITEM_PK    PRIMARY KEY (SALES_CAMPAIGN_ID, MATERIAL_ID),
    CONSTRAINT SALES_CAMPAIGN_ITEMS      FOREIGN KEY (SALES_CAMPAIGN_ID) REFERENCES SALES_CAMPAIGN (SALES_CAMPAIGN_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT MATERIALS_SALES_CAMPAIGNS FOREIGN KEY (MATERIAL_ID)       REFERENCES MATERIAL (MATERIAL_ID)
);

CREATE INDEX SALES_CAMPAIGN_ITEM_IND1 ON SALES_CAMPAIGN_ITEM (MATERIAL_ID);



CREATE TABLE SALES_ACCOUNT_BALANCE (
  OWNER_ID             INTEGER         NOT NULL,
  REFUND               DECIMAL(12,2)   NOT NULL,
  TOTAL_SALE           DECIMAL(12,2)   NOT NULL,
  TOTAL_PURCHASE       DECIMAL(12,2)   NOT NULL,
  PROVISION            DECIMAL(12,2)   NOT NULL,
    CONSTRAINT SALES_ACCOUNT_BALANCE_PK PRIMARY KEY(OWNER_ID),
    CONSTRAINT SALES_ACCOUNT_BALANCES FOREIGN KEY(OWNER_ID) REFERENCES BUSINESS_PARTNER(BUSINESS_PARTNER_ID)
);



CREATE VIEW V_PRODUCTION_COMMITMENT AS
SELECT C.MATERIAL_ID, M.MANUFACTURER_ID, C.BUSINESS_PARTNER_ID, C.OWNER_ID,
       M.CAPTION, B.CAPTION AS VENDOR_CAPTION, M.PART_NUMBER,
       C.ORDER_DEAD_LINE, C.DELIVERY_PROMISE, C.MIN_QUANTITY, C.MAX_QUANTITY, C.UNIT,
       C.START_PRICE, C.CURRENCY, C.CURRENT_ORDER, C.CURRENT_PRICE, I.QUANTITY, I.PRICE, C.STATUS
  FROM PRODUCT_PRICE_COMMITMENT C, MATERIAL M, PRODUCT_PRICE_COMMITMENT_ITEM I, BUSINESS_PARTNER B
 WHERE M.MATERIAL_ID = C.MATERIAL_ID
   AND I.MATERIAL_ID = C.MATERIAL_ID
   AND I.ORDER_DEAD_LINE = C.ORDER_DEAD_LINE
   AND I.BUSINESS_PARTNER_ID = C.BUSINESS_PARTNER_ID
   AND B.BUSINESS_PARTNER_ID = C.BUSINESS_PARTNER_ID;




CREATE VIEW V_PRODUCTION_COMMITMENT_SALES AS
SELECT C.MATERIAL_ID, M.MANUFACTURER_ID, C.BUSINESS_PARTNER_ID, C.OWNER_ID,
       M.CAPTION, B.CAPTION AS VENDOR_CAPTION, M.PART_NUMBER,
       C.ORDER_DEAD_LINE, C.DELIVERY_PROMISE, C.MIN_QUANTITY, C.MAX_QUANTITY, C.UNIT,
       C.START_PRICE, C.CURRENCY, C.CURRENT_ORDER, C.CURRENT_PRICE, I.QUANTITY, I.PRICE,
       S.CUSTOMER_ID, S.SALES_ORDER_ID, O.QUANTITY AS SALES_QUANTITY, O.UNIT_PRICE, R.INITIAL_SEQUENCE, R.INITIAL_PRICE, S.STATUS
  FROM PRODUCT_PRICE_COMMITMENT C, MATERIAL M, PRODUCT_PRICE_COMMITMENT_ITEM I, BUSINESS_PARTNER B, SALES_ORDER_COMMITMENT R, SALES_ORDER_ITEM O, SALES_ORDER S
 WHERE M.MATERIAL_ID = C.MATERIAL_ID
   AND I.MATERIAL_ID = C.MATERIAL_ID
   AND I.ORDER_DEAD_LINE = C.ORDER_DEAD_LINE
   AND I.BUSINESS_PARTNER_ID = C.BUSINESS_PARTNER_ID
   AND B.BUSINESS_PARTNER_ID = C.BUSINESS_PARTNER_ID
   AND R.BUSINESS_PARTNER_ID = C.BUSINESS_PARTNER_ID
   AND R.ORDER_DEAD_LINE = C.ORDER_DEAD_LINE
   AND R.MATERIAL_ID = C.MATERIAL_ID
   AND O.SALES_ORDER_ID=R.SALES_ORDER_ID
   AND O.LINE=R.LINE
   AND S.SALES_ORDER_ID=O.SALES_ORDER_ID;
