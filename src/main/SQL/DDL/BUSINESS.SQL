CREATE TABLE BUSINESS_SERVICE (
  BUSINESS_SERVICE_ID  VARCHAR(20)  NOT NULL,
  CAPTION              VARCHAR(80)  NOT NULL,
    CONSTRAINT BUSINESS_SERVICE_PK PRIMARY KEY (BUSINESS_SERVICE_ID)
);



CREATE TABLE BUSINESS_SERVICE_PAGE (
  BUSINESS_SERVICE_ID  VARCHAR(20)   NOT NULL,
  PAGENAME             VARCHAR(30)   NOT NULL,
    CONSTRAINT BUSINESS_SERVICE_PAGE_PK PRIMARY KEY(BUSINESS_SERVICE_ID, PAGENAME),
    CONSTRAINT BUSINESS_SERVICE_PAGES   FOREIGN KEY(BUSINESS_SERVICE_ID) REFERENCES BUSINESS_SERVICE(BUSINESS_SERVICE_ID),
    CONSTRAINT PAGE_BUSINESS_SERVICES   FOREIGN KEY(PAGENAME)            REFERENCES SCREEN_PAGE(PAGENAME)
);


CREATE INDEX BUSINESS_SERVICE_PAGE_IND1 ON BUSINESS_SERVICE_PAGE (PAGENAME);



CREATE TABLE BUSINESS_PARTNER (
  BUSINESS_PARTNER_ID  INTEGER      NOT NULL,
  CAPTION              VARCHAR(80)  NOT NULL,
  WEB_ADDRESS          VARCHAR(80),
  HQ_COUNTRY           CHAR(2),
  TAX_CENTER           VARCHAR(80),
  TAX_NUMBER           VARCHAR(20),
    CONSTRAINT BUSINESS_PARTNER_PK PRIMARY KEY (BUSINESS_PARTNER_ID)
);



CREATE TABLE PARTNER_ADDRESS (
  BUSINESS_PARTNER_ID  INTEGER       NOT NULL,
  ADDRESS_ID           SMALLINT      NOT NULL,
  ADDRESS_TYPE         CHAR(1)       NOT NULL,
  STREET               VARCHAR(80)   NOT NULL,
  CITY                 CHAR(2)       NOT NULL,
  STATE                VARCHAR(20),
  COUNTRY              CHAR(2)       NOT NULL,
  PHONE                VARCHAR(20),
  LONGITUDE            FLOAT,
  LATITUDE             FLOAT,
  ALTITUDE             FLOAT,
    CONSTRAINT PARTNER_ADDRESS_PK PRIMARY KEY (BUSINESS_PARTNER_ID, ADDRESS_ID),
    CONSTRAINT PARTNER_ADDRESSES FOREIGN KEY (BUSINESS_PARTNER_ID) REFERENCES BUSINESS_PARTNER (BUSINESS_PARTNER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);



CREATE TABLE PARTNER_CREDIT (
  BUSINESS_PARTNER_ID  INTEGER       NOT NULL,
  CREDIT_TYPE          VARCHAR(20)   NOT NULL,
  BALANCE              DECIMAL(12,2) NOT NULL,
    CONSTRAINT PARTNER_CREDIT_PK PRIMARY KEY (BUSINESS_PARTNER_ID, CREDIT_TYPE),
    CONSTRAINT PARTNER_CREDITS   FOREIGN KEY (BUSINESS_PARTNER_ID) REFERENCES BUSINESS_PARTNER (BUSINESS_PARTNER_ID)
);



CREATE TABLE BUSINESS_OWNER (
  BUSINESS_PARTNER_ID  INTEGER     NOT NULL,
  BEGDA                TIMESTAMP   NOT NULL,
    CONSTRAINT BUSINESS_OWNER_PK PRIMARY KEY (BUSINESS_PARTNER_ID),
    CONSTRAINT IS_BUSINESS_OWNER FOREIGN KEY (BUSINESS_PARTNER_ID) REFERENCES BUSINESS_PARTNER (BUSINESS_PARTNER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);



CREATE TABLE CUSTOMER (
  BUSINESS_PARTNER_ID  INTEGER   NOT NULL,
  BEGDA                TIMESTAMP NOT NULL,
    CONSTRAINT CUSTOMER_PK PRIMARY KEY (BUSINESS_PARTNER_ID),
    CONSTRAINT IS_CUSTOMER FOREIGN KEY (BUSINESS_PARTNER_ID) REFERENCES BUSINESS_PARTNER (BUSINESS_PARTNER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);



CREATE TABLE SUBCONTRACTOR (
  BUSINESS_PARTNER_ID  INTEGER     NOT NULL,
  BEGDA                TIMESTAMP   NOT NULL,
  EXT_SUBCONTRACTOR    VARCHAR(30),
    CONSTRAINT SUBCONTRACTOR_PK PRIMARY KEY (BUSINESS_PARTNER_ID),
    CONSTRAINT IS_SUBCONTRACTOR FOREIGN KEY (BUSINESS_PARTNER_ID) REFERENCES BUSINESS_PARTNER (BUSINESS_PARTNER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);



CREATE TABLE VENDOR (
  BUSINESS_PARTNER_ID  INTEGER     NOT NULL,
  BEGDA                TIMESTAMP   NOT NULL,
  APPROVED             CHAR(1)     NOT NULL,
    CONSTRAINT VENDOR_PK PRIMARY KEY (BUSINESS_PARTNER_ID),
    CONSTRAINT IS_VENDOR FOREIGN KEY (BUSINESS_PARTNER_ID) REFERENCES BUSINESS_PARTNER (BUSINESS_PARTNER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);



CREATE TABLE BUSINESS_CONTRACT (
  BUSINESS_PARTNER_ID  INTEGER       NOT NULL,
  BUSINESS_SERVICE_ID  VARCHAR(20)   NOT NULL,
  BEGDA                TIMESTAMP     NOT NULL,
  ENDDA                TIMESTAMP     NOT NULL,
  COST                 FLOAT,
  DESCRIPTION          VARCHAR(2000),
    CONSTRAINT BUSINESS_CONTRACT_PK PRIMARY KEY (BUSINESS_PARTNER_ID, BUSINESS_SERVICE_ID, BEGDA),
    CONSTRAINT SERVICE_BUSINESS_CONTRACTS FOREIGN KEY (BUSINESS_SERVICE_ID) REFERENCES BUSINESS_SERVICE (BUSINESS_SERVICE_ID),
    CONSTRAINT PARTNER_BUSINESS_CONTRACTS FOREIGN KEY (BUSINESS_PARTNER_ID) REFERENCES BUSINESS_OWNER (BUSINESS_PARTNER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE INDEX BUSINESS_CONTRACT_IND1 ON BUSINESS_CONTRACT (BUSINESS_SERVICE_ID);



CREATE TABLE APPLICATION_CONFIG (
  OWNER_ID             INTEGER       NOT NULL,
  DOMAIN               VARCHAR(80)   NOT NULL,
  HOMEPAGE             VARCHAR(80)   NOT NULL,
  APPLICATION_TITLE    VARCHAR(80)   NOT NULL,
  INITIAL_CONTENT      VARCHAR(80),
  INITIAL_SKIN         VARCHAR(80),
    CONSTRAINT APPLICATION_CONFIG_PK PRIMARY KEY(OWNER_ID),
    CONSTRAINT IS_APPLICATION_CONFIG FOREIGN KEY(OWNER_ID) REFERENCES BUSINESS_PARTNER(BUSINESS_PARTNER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE INDEX APPLICATION_CONFIG_IND1 ON APPLICATION_CONFIG (OWNER_ID);



CREATE TABLE PARTNER_CERTIFICATION_TYPE (
  CERTIFICATION_TYPE   VARCHAR(30)   NOT NULL,
  CAPTION              VARCHAR(80)   NOT NULL,
  ISSUER               VARCHAR(80)   NOT NULL,
  VALIDATION_ADDRESS   VARCHAR(255)  NOT NULL,
  VALIDITY             INTEGER       NOT NULL,
  AREA                 VARCHAR(30)   NOT NULL,
    CONSTRAINT PARTNER_CERTIFICATION_TYPE_PK PRIMARY KEY(CERTIFICATION_TYPE)
);



CREATE TABLE PARTNER_CERTIFICATION (
  PARTNER_CERTIFICATION_ID INTEGER       NOT NULL,
  BUSINESS_PARTNER_ID      INTEGER       NOT NULL,
  CERTIFICATION_TYPE       VARCHAR(30)   NOT NULL,
  ISSUE_DATE               TIMESTAMP     NOT NULL,
  EXPIRE_DATE              TIMESTAMP     NOT NULL,
  LEVEL                    VARCHAR(20)   NOT NULL,
  VALIDATION_KEY           VARCHAR(80)   NOT NULL,
    CONSTRAINT PARTNER_CERTIFICATION_PK PRIMARY KEY(PARTNER_CERTIFICATION_ID),
    CONSTRAINT TYPE_CERTIFICATIONS      FOREIGN KEY(CERTIFICATION_TYPE)  REFERENCES PARTNER_CERTIFICATION_TYPE (CERTIFICATION_TYPE),
    CONSTRAINT PARTNER_CERTIFICATIONS   FOREIGN KEY(BUSINESS_PARTNER_ID) REFERENCES BUSINESS_PARTNER (BUSINESS_PARTNER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE INDEX PARTNER_CERTIFICATION_IND1 ON PARTNER_CERTIFICATION (CERTIFICATION_TYPE);
CREATE INDEX PARTNER_CERTIFICATION_IND2 ON PARTNER_CERTIFICATION (BUSINESS_PARTNER_ID);



CREATE TABLE PARTNER_CONVERSATION (
  OBJECT_ID                INTEGER       NOT NULL,
  OBJECT_TYPE              CHAR(2)       NOT NULL,
  CTIME                    TIMESTAMP     NOT NULL,
  SEQ                      SMALLINT      NOT NULL,
  FROM_PARTNER             INTEGER       NOT NULL,
  TO_PARTNER               INTEGER       NOT NULL,
  USERNAME                 VARCHAR(30)   NOT NULL,
  CTEXT                    VARCHAR(250)  NOT NULL,
    CONSTRAINT PARTNER_CONVERSATION_PK PRIMARY KEY (OBJECT_ID, OBJECT_TYPE, CTIME, SEQ)
);



CREATE TABLE VENDOR_BUSINESS (
  BUSINESS_PARTNER_ID      INTEGER       NOT NULL,
  NODE_ID                  INTEGER       NOT NULL,
  BEGDA                    TIMESTAMP     NOT NULL,
    CONSTRAINT VENDOR_BUSINESS_PK PRIMARY KEY (BUSINESS_PARTNER_ID, NODE_ID),
    CONSTRAINT VENDOR_BUSINESSES  FOREIGN KEY (BUSINESS_PARTNER_ID) REFERENCES VENDOR (BUSINESS_PARTNER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);
